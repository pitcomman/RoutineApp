#pragma checksum "D:\Temporary File\RoutineApp\Views\Home\ChangeProcessCode.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "38bddfba07809be2dede428961fd0ef52c86499b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_ChangeProcessCode), @"mvc.1.0.view", @"/Views/Home/ChangeProcessCode.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Temporary File\RoutineApp\Views\_ViewImports.cshtml"
using RoutineApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Temporary File\RoutineApp\Views\_ViewImports.cshtml"
using RoutineApp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"38bddfba07809be2dede428961fd0ef52c86499b", @"/Views/Home/ChangeProcessCode.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f17935f7075e8fec3185a7e268b598ac7cb307dd", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_ChangeProcessCode : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<RoutineApp.Models.User>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("myform"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\Temporary File\RoutineApp\Views\Home\ChangeProcessCode.cshtml"
  
    ViewData["Title"] = "Change ProcessCode";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<style>

    * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: ""Poppins"", sans-serif;
    }
    
    .test {
    padding: 20px;
    background: aqua;
    }

    div.scrollmenu {
    overflow: auto;
    white-space: nowrap;
    max-height: 500px;
}

    div.scrollmenu a {
    display: inline-block;
    color: white;
    text-align: center;
    padding: 14px;
    text-decoration: none;
    }

    div.scrollmenu a:hover {
    background-color: #777;
    }

    .freeze-column{
        top: 0px;
        position: sticky;
        text-align: center;
    }

</style>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "38bddfba07809be2dede428961fd0ef52c86499b4565", async() => {
                WriteLiteral("\r\n\r\n    <br><br>\r\n    <h1 class = \"text-center text-uppercase font-weight-bolder\">Change ProcessCode</h1>\r\n    <hr></hr>\r\n\r\n\r\n    <div class=\"test text-center\">\r\n");
                WriteLiteral("\r\n        <br>\r\n\r\n        <div class = \"Search\">\r\n\r\n            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "38bddfba07809be2dede428961fd0ef52c86499b5112", async() => {
                    WriteLiteral(@"
                <label	for=""login"">OPID</label>
                <input	id=""op-input"" type=""text"" placeholder=""Operator ID"" >
                
                <label	for=""login"">OperatorName</label>
                <input	id=""op-input1"" type=""text""  placeholder=""Operator Name"">
                <button id=""btnGetOp"" type=""submit"" class=""btn btn-success"">Search Operator</button>

");
                    WriteLiteral("            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n");
                WriteLiteral(@"        </div>


    </div>

    <br>

    <div class=""scrollmenu"">
        <div id=""tblEmployee""></div>
    </div>


    <br><br>
    <h1 class = ""text-center text-uppercase font-weight-bolder"">Add MCR Process Control Operater</h1>
    <hr></hr>

    <div class=""test text-center"">
        <br>
        <div class = ""Search"">

            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "38bddfba07809be2dede428961fd0ef52c86499b7363", async() => {
                    WriteLiteral("\r\n                <label\tfor=\"login\">OPID</label>\r\n                <input\tid=\"op-input-MCR\" type=\"text\" placeholder=\"Operator ID\">\r\n                <button id=\"btnAddMCR\" type=\"submit\" class=\"btn btn-success\">Add</button>\r\n            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
        </div>
    </div>

    <br><br>
    <h1 class = ""text-center text-uppercase font-weight-bolder"">Add MCR TP Process Control Operater</h1>
    <hr></hr>

    <div class=""test text-center"">
        <br>
        <div class = ""Search"">

            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "38bddfba07809be2dede428961fd0ef52c86499b9268", async() => {
                    WriteLiteral("\r\n                <label\tfor=\"login\">OPID</label>\r\n                <input\tid=\"op-input-MCRTP\" type=\"text\" placeholder=\"Operator ID\">\r\n                <button id=\"btnAddMCRTP\" type=\"submit\" class=\"btn btn-success\">Add</button>\r\n            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        </div>\r\n    </div>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n\r\n\r\n\r\n\r\n<a>");
#nullable restore
#line 138 "D:\Temporary File\RoutineApp\Views\Home\ChangeProcessCode.cshtml"
Write(ViewData["City"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</a>

<script>
    $(document).ready(function(){



        
        $(""#btnUploaded"").click(function(){

            var formData = new FormData();
            var fuUploadFile = document.getElementById(""fuExcel"");
            var myFile = fuUploadFile.files[0];
            formData.append(""myExcelData"", myFile);

            $.ajax({
                type:'POST',
                url:'");
#nullable restore
#line 155 "D:\Temporary File\RoutineApp\Views\Home\ChangeProcessCode.cshtml"
                Write(Url.Action("ImportExcel", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                contentType: false,\r\n                processData: false,\r\n                data: formData,\r\n                dataType: \'Json\',\r\n                success:function(data){\r\n                    console.log(data)\r\n");
            WriteLiteral("\r\n                JSONToHTMLTable(data,\"tblEmployee\")\r\n\r\n");
            WriteLiteral("\r\n");
            WriteLiteral("\r\n\r\n\r\n");
            WriteLiteral("\r\n\r\n");
            WriteLiteral(@"                }
            })
        })

        $(""#btnUpload"").click(function(){

            var formData = new FormData();
            var fuUploadFile = document.getElementById(""fuExcel"");
            var myFile = fuUploadFile.files[0];
            formData.append(""myExcelData"", myFile);

            $.ajax({
                type:'POST',
");
            WriteLiteral(@"                url:'ImportExcel',
                contentType: false,
                processData: false,
                data: formData,
                dataType: 'Json',
                success:function(data){
                    console.log(data)
                    var parsedData = JSON.parse(data)
                    console.log(parsedData['Value'])
                    //JSONToHTMLTable(parsedData['Value'],""tblEmployee"")
                    JsonToHTMLTable_test(parsedData['Value'],""tblEmployee"")
                }
            })
        })


        $(""#btnAddMCR"").click(function(){
            var formData = new FormData();
            var opid = document.getElementById(""op-input-MCR"").value;
            console.log(opid);
            
            $.ajax({
                type:'POST',
");
            WriteLiteral("                url:\'");
#nullable restore
#line 222 "D:\Temporary File\RoutineApp\Views\Home\ChangeProcessCode.cshtml"
                Write(Url.Action("AddMCROperator", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: {opid:opid},
                dataType: 'json',
                success:function(data){
                    console.log(data)
                    var parsedData = JSON.parse(data)
                    console.log(parsedData['EmployeeDetail'])
                    JSONToHTMLTable(parsedData['EmployeeDetail'],""tblEmployee"")
                }
            })

            return false
        })

");
            WriteLiteral("\r\n");
            WriteLiteral("        $(\"#myform\").submit(function(){\r\n        \r\n            var formData = new FormData();\r\n");
            WriteLiteral(@"            console.log(document.getElementById(""op-input"").value)
            

            var opid = document.getElementById(""op-input"").value
            var operatorName = document.getElementById(""op-input1"").value

            $.ajax({
                method:'GET',
");
            WriteLiteral("                url:\'");
#nullable restore
#line 266 "D:\Temporary File\RoutineApp\Views\Home\ChangeProcessCode.cshtml"
                Write(Url.Action("GetOperatorDetail", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: {opid:opid, operatorName:operatorName},
                contentType: 'text/plain',
                success:function(data){
                    console.log(data)
                    var parsedData = JSON.parse(data)
                    console.log(parsedData['EmployeeDetail'])
                    JSONToHTMLTable(parsedData['EmployeeDetail'],""tblEmployee"")
                }

            })
            return false;

        })


        function JsonToHTMLTable_test(jsonData, elementToBind)
        {
            var col = [];
            for (var a = 0; a < jsonData.length; a++) {
                var elementJson = jsonData[a]
            
                if (Array.isArray(elementJson)) {
                    
                    console.log(""Is array"")
                    
                    var col = [];
                    
                    for (var b = 0; b < elementJson.length; b++)
                    {
                        
                    ");
            WriteLiteral(@"    //Get Key for make column
                        for (var i = 0; i < elementJson.length; i++) {
                            for (var key in elementJson[i]) {
                                if (col.indexOf(key) === -1) {
                                    col.push(key);
                                    console.log(key)
                                }
                            }
                        }
                    }

                    //This Code creates HTML table
                    var table = document.createElement(""table"");

                    //This Code getsrows for header creader above.
                    var tr = table.insertRow(-1);

                    for (var i = 0; i < col.length; i++) {
                        var th = document.createElement(""th"");
                        th.classList.add(""freeze-column"");
                        th.innerHTML = col[i];
                        tr.appendChild(th);
                    }
                }
          ");
            WriteLiteral("      else\r\n                {\r\n                    console.log(\"Is not array\")\r\n                }\r\n\r\n");
            WriteLiteral("                //This Code adds data to table as rows\r\n");
            WriteLiteral(@"            }

            for (var a = 0; a < jsonData.length; a++) {
                var elementJson = jsonData[a]

                console.log(elementJson)
                //This Code adds data to table as rows
                for (var i = 0; i < elementJson.length; i++) {

                    tr = table.insertRow(-1);

                    for (var j = 0; j < col.length; j++) {
                        var tabCell = tr.insertCell(-1);
                        tabCell.innerHTML = elementJson[i][col[j]];
                        console.log(elementJson[i][col[j]])
                    }
                }

                //This Code gets the all columns for header
                var divContainer = document.getElementById(elementToBind);
                divContainer.innerHTML = """";
                divContainer.appendChild(table);
                console.log(table)
            }

        }

        function JSONToHTMLTable(jsonData, elementToBind) {

            //Loop for each sub el");
            WriteLiteral(@"ement
          
            //This Code gets all columns for header   and stored in array col
            var col = [];
            for (var i = 0; i < jsonData.length; i++) {
                for (var key in jsonData[i]) {
                    if (col.indexOf(key) === -1) {
                        col.push(key);
                        console.log(key)
                    }
                }
            }

            //This Code creates HTML table
            var table = document.createElement(""table"");

            //This Code getsrows for header creader above.
            var tr = table.insertRow(-1);

            for (var i = 0; i < col.length; i++) {
                var th = document.createElement(""th"");
                th.className = ""freeze-column""
                th.innerHTML = col[i];
                tr.appendChild(th);
            }

            //This Code adds data to table as rows
            for (var i = 0; i < jsonData.length; i++) {

                tr = table.inse");
            WriteLiteral(@"rtRow(-1);

                for (var j = 0; j < col.length; j++) {
                    var tabCell = tr.insertCell(-1);
                    tabCell.innerHTML = jsonData[i][col[j]];
                }
            }

            //This Code gets the all columns for header
            var divContainer = document.getElementById(elementToBind);
            divContainer.innerHTML = """";
            divContainer.appendChild(table);
        }

    })
</script>

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<RoutineApp.Models.User> Html { get; private set; }
    }
}
#pragma warning restore 1591
